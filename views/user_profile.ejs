<%- include('partials/header', { user: viewer || {} }) %> 
<% if (viewer && viewer.username === profileUser.username) { %>
<script>
	location.replace('/profile');
</script>
<% } else { %>

<main class="min-h-screen">
	<section class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
		<a
			href="#"
			onclick="history.back(); return false;"
			class="inline-flex items-center gap-3 rounded-full px-4 py-2 text-sm font-medium bg-transparent border border-white/10 backdrop-blur-sm shadow-sm transition transform hover:bg-white/5 active:scale-95 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-white/30 mb-4"
			aria-label="Go back">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="w-4 h-4 -ml-0.5"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
				aria-hidden="true">
				<path d="M15 18l-6-6 6-6"></path>
			</svg>
			<span>Back</span>
		</a>

		<div class="bg-[#1e2939] rounded-2xl p-6 shadow-sm">
			<% const profile = profileUser || {}; 
			const v = viewer || null; 
			const isViewer = !!v; 
			const isOwner = isViewer && v.username === profile.username; 
			const isFollowingLocal = !!isFollowing;
			const followersCountInit = profile.followers?.length || 0;
			const postsCountInit = pagination?.totalPosts || posts.length || 0;
			const followingCountInit = profile.following?.length || 0;
			const displayName = profile.fullname || profile.username || 'User'; 
			const displayUsername = profile.username || 'user'; 
			const profileImageSrc = profile.profileimage || '/images/defaultpic.png'; %>

			<div class="flex flex-col sm:flex-row items-start sm:items-center gap-6">
				<div class="flex items-center gap-6">
					<img
						src="<%= profileImageSrc %>"
						alt="<%= displayUsername %> avatar"
						class="w-28 h-28 rounded-full object-cover ring-2 ring-gray-100"
						loading="lazy"
						decoding="async" />

					<div class="hidden sm:block">
						<h1 class="text-2xl font-semibold text-gray-50"><%= displayName %></h1>
						<p class="text-sm text-gray-50">@<%= displayUsername %></p>
						<% if (profile.bio) { %>
						<p class="mt-2 text-sm text-gray-50 max-w-xl"><%= profile.bio %></p>
						<% } %>

						<div class="mt-3 flex items-center gap-6 text-sm text-gray-50">
							<div>
								<span class="font-semibold text-gray-50"><%= postsCountInit %></span>
								posts
							</div>

							<div>
								<span id="followersCount" class="font-semibold text-gray-50"><%= followersCountInit %></span>
								followers
							</div>

							<div>
								<span class="font-semibold text-gray-50"><%= followingCountInit %></span>
								following
							</div>
						</div>
					</div>
				</div>

				<div class="ml-auto flex items-center gap-3 w-full sm:w-auto">
					<% if (isOwner) { %>
					<a
						href="/profile"
						class="inline-flex items-center gap-2 px-4 py-2 rounded-md border border-gray-200 text-sm font-medium">
						Your profile
					</a>
					<% } else if (isViewer) { %>
					<button
						id="followBtn"
						type="button"
						aria-pressed="<%= isFollowingLocal ? 'true' : 'false' %>"
						class="inline-flex items-center gap-2 px-4 py-2 rounded-md text-sm font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 <%= isFollowingLocal ? 'bg-white text-gray-800 border border-gray-200 shadow-sm' : 'bg-blue-600 text-white hover:bg-blue-700 shadow-md' %>"
						data-username="<%= profile.username || '' %>"
						data-following="<%= isFollowingLocal ? 'true' : 'false' %>">
						<span id="followLabel"><%= isFollowingLocal ? 'Unfollow' : 'Follow' %></span>
					</button>
					<% } else { %>
					<a
						href="/login"
						class="px-4 py-2 rounded-md border border-gray-200 text-sm font-medium">Log in</a>
					<% } %>
				</div>
			</div>

			<div class="block sm:hidden mt-4">
				<p class="text-sm font-semibold text-gray-50 truncate max-w-full" title="<%= displayName %>"><%= displayName %></p>
				<p class="text-sm text-gray-300">@<%= displayUsername %></p>

				<div class="mt-3 flex flex-wrap items-center gap-4 text-sm">
					<div class="flex items-center gap-2 min-w-0">
						<span class="font-semibold text-gray-50"><%= postsCountInit %></span>
						<span class="text-gray-300">posts</span>
					</div>

					<div class="flex items-center gap-2 min-w-0">
						<span class="font-semibold text-gray-50"><%= followersCountInit %></span>
						<span class="text-gray-300">followers</span>
					</div>

					<div class="flex items-center gap-2 min-w-0">
						<span class="font-semibold text-gray-50"><%= followingCountInit %></span>
						<span class="text-gray-300">following</span>
					</div>
				</div>
			</div>
		</div>

		<section class="mt-8">
			<h3 class="text-sm font-semibold text-gray-900 mb-3">Pins</h3>

			<div id="postsContainer" class="columns-2 md:columns-3 lg:columns-4 gap-4 space-y-4">
				<% if (posts && posts.length) { %> 
					<% for (let i = 0, len = posts.length; i < len; i++) { const p = posts[i]; %>
					<article class="break-inside-avoid mb-4">
						<a href="/pin/<%= p._id %>" class="block bg-white rounded-2xl overflow-hidden shadow-sm hover:shadow-md transition">
							<% if (p.image) { %>
							<img
								src="<%= p.image %>"
								alt="<%= p.imageTitle || 'post image' %>"
								class="w-full object-cover"
								style="max-height: 700px"
								loading="lazy"
								decoding="async" />
							<% } else { %>
							<div class="w-full bg-gray-100 aspect-video flex items-center justify-center text-gray-400">No image</div>
							<% } %>
						</a>
						<div>
							<% if (p.imageTitle) { %>
							<h4 class="mt-3 font-medium text-gray-50"><%= p.imageTitle %></h4>
							<% } %>
						</div>
					</article>
					<% } %> 
				<% } else { %>
				<div class="bg-white rounded-2xl p-6 shadow-sm text-gray-600">No posts yet.</div>
				<% } %>
			</div>

			<% if (pagination && pagination.hasNextPage) { %>
			<div class="text-center mt-6">
				<button
					id="loadMoreBtn"
					data-page="<%= pagination.currentPage %>"
					data-username="<%= profile.username %>"
					class="inline-flex items-center px-4 py-2 rounded-md bg-white border border-gray-200 shadow-sm">
					Load more
				</button>
			</div>
			<% } %>
		</section>
	</section>
</main>

<script>
// Follow/Unfollow functionality
(function(){
	const btn = document.getElementById('followBtn');
	if (!btn) return;
	
	const username = btn.dataset.username || '';
	const labelEl = document.getElementById('followLabel');
	const countEl = document.getElementById('followersCount');
	let following = btn.dataset.following === 'true';

	function setBtnState(isFollowing, followersCount){
		btn.setAttribute('aria-pressed', isFollowing ? 'true' : 'false');
		btn.dataset.following = isFollowing ? 'true' : 'false';
		btn.className = `inline-flex items-center gap-2 px-4 py-2 rounded-md text-sm font-medium transition focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${isFollowing ? 'bg-white text-gray-800 border border-gray-200 shadow-sm' : 'bg-blue-600 text-white hover:bg-blue-700 shadow-md'}`;
		if (labelEl) labelEl.textContent = isFollowing ? 'Unfollow' : 'Follow';
		if (typeof followersCount === 'number' && countEl) {
			countEl.textContent = String(Math.max(0, followersCount));
		}
	}

	btn.addEventListener('click', async function(){
		if (!username) return;
		btn.disabled = true;
		
		const prevFollowing = following;
		const prevCount = countEl ? parseInt(countEl.textContent || '0', 10) : NaN;
		const optimisticCount = Number.isNaN(prevCount) ? prevCount : prevCount + (prevFollowing ? -1 : 1);
		
		following = !prevFollowing;
		setBtnState(following, optimisticCount);

		try {
			const res = await fetch('/users/' + encodeURIComponent(username) + '/follow', {
				method: 'POST',
				credentials: 'same-origin',
				headers: { 'Content-Type': 'application/json' }
			});
			
			const data = await res.json();
			if (!res.ok || !data || !data.success) throw new Error('Request failed');
			
			following = !!data.following;
			const serverCount = typeof data.followersCount !== 'undefined' ? Number(data.followersCount) : undefined;
			setBtnState(following, serverCount);
		} catch (e) {
			following = prevFollowing;
			setBtnState(prevFollowing, prevCount);
			console.error('Follow toggle failed:', e);
			alert('Could not update follow status. Try again.');
		} finally {
			btn.disabled = false;
		}
	});
})();

// Load More functionality
(function(){
	const loadMoreBtn = document.getElementById('loadMoreBtn');
	if (!loadMoreBtn) return;
	
	let currentPage = parseInt(loadMoreBtn.dataset.page) || 1;
	const username = loadMoreBtn.dataset.username;
	const container = document.getElementById('postsContainer');
	
	loadMoreBtn.addEventListener('click', async function(){
		loadMoreBtn.disabled = true;
		loadMoreBtn.textContent = 'Loading...';
		
		try {
			const nextPage = currentPage + 1;
			const res = await fetch(`/user/${username}?page=${nextPage}`, {
				headers: {
					'X-Requested-With': 'XMLHttpRequest',
					'Accept': 'application/json'
				}
			});
			
			if (!res.ok) throw new Error('Failed to load posts');
			
			const data = await res.json();
			
			if (data.posts && data.posts.length > 0) {
				// Append new posts to container
				data.posts.forEach(post => {
					const article = document.createElement('article');
					article.className = 'break-inside-avoid mb-4';
					article.innerHTML = `
						<a href="/pin/${post._id}" class="block bg-white rounded-2xl overflow-hidden shadow-sm hover:shadow-md transition">
							${post.image ? 
								`<img src="${post.image}" alt="${post.imageTitle || 'post image'}" class="w-full object-cover" style="max-height: 700px" loading="lazy" decoding="async" />` :
								`<div class="w-full bg-gray-100 aspect-video flex items-center justify-center text-gray-400">No image</div>`
							}
						</a>
						${post.imageTitle ? `<div><h4 class="mt-3 font-medium text-gray-50">${post.imageTitle}</h4></div>` : ''}
					`;
					container.appendChild(article);
				});
				
				currentPage = nextPage;
				
				// Hide button if no more pages
				if (!data.pagination || !data.pagination.hasNextPage) {
					loadMoreBtn.style.display = 'none';
				} else {
					loadMoreBtn.textContent = 'Load more';
				}
			} else {
				loadMoreBtn.style.display = 'none';
			}
		} catch (e) {
			console.error('Failed to load more posts:', e);
			loadMoreBtn.textContent = 'Failed to load. Try again';
		} finally {
			loadMoreBtn.disabled = false;
		}
	});
})();
</script>

<%- include('partials/footer') %> 
<% } %>